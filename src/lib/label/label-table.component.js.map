{"version":3,"file":"label-table.component.js","sourceRoot":"","sources":["label-table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, TemplateRef} from \"@angular/core\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap\";\nimport {LabelEdition, LabelEditionService} from \"./labelEdition.service\";\nimport {LabelTableService} from \"./labelTable.service\";\nimport {PaginationInstance} from \"ngx-pagination\";\n\n@Component({\n  selector: 'label-table',\n  templateUrl: './label-table.component.html',\n})\nexport class LabelTable {\n\n  languages: string[] = [];\n  keys: string[] = [];\n  labels: any;\n  modalRef: BsModalRef;\n\n  keyForEdit:string=null;\n\n  nbrItemsPerPages = [5,10,25,50,100,500,1000];\n\n  public config: PaginationInstance = {\n    itemsPerPage: 5,\n    currentPage: 1\n  };\n\n  constructor(private modalService: BsModalService,private labelService: LabelEditionService, private labelTableService:LabelTableService) {\n    this.languages = labelService.languages;\n  }\n\n  show(template: TemplateRef<any>) {\n    this.keys = [];\n    this.labelTableService.getData().subscribe(data => {\n      this.labels = data;\n      for(let e in this.labels){\n        this.keys.push(e);\n      }\n      this.modalRef = this.modalService.show(template,{class: 'gray modal-lg modal-xl'});\n    }, error => {\n      console.error(\"Error loading labels :\" +error);\n    });\n  }\n\n  edit(value:string){\n    this.keyForEdit = value;\n  }\n\n  addLabel(value:string){\n    this.labelService\n      .update(new LabelEdition(value, null, null, 'FR'))\n      .subscribe(\n        null,\n        (e) => console.error(\"error\", e),\n        () => this.back()\n      )\n  }\n\n  back(){\n    this.keyForEdit = null;\n    this.keys = [];\n    this.labelTableService.getData().subscribe(data => {\n      this.labels = data;\n      for(let e in this.labels){\n        this.keys.push(e);\n      }\n    }, error => {\n      console.error(\"Error loading labels :\" +error);\n    });\n  }\n\n  onPageChange(number: number) {\n    this.config.currentPage = number;\n  }\n\n  getLabel(key:string, lang: string) {\n    let found = this.labels[key].find((l:any) => l.lang === lang)\n    if (found) {\n      return found;\n    } else {\n      return new LabelEdition(key, null, null, lang)\n    }\n  }\n\n  close(){\n    this.keyForEdit = null;\n    this.modalRef.hide()\n  }\n\n\n}\n"]}