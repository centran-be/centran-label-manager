{"version":3,"file":"label.service.js","sourceRoot":"","sources":["label.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sCAAiD;AACjD,+CAA2C;AAC3C,6BAAqC;AAGrC;IAIE,sBAAqC,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;QACtD,IAAI,CAAC,IAAI,GAAG,IAAI,sBAAe,CAAS,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1D,IAAI,CAAC,SAAS,GAAG,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC;IACvD,CAAC;IAED,sBAAW,mCAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAW,iCAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAC7B,CAAC;;;OAAA;IAEM,iCAAU,GAAjB,UAAkB,IAAY;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACtB,CAAC;IAnBU,YAAY;QADxB,iBAAU,EAAE;QAKE,WAAA,aAAM,CAAC,QAAQ,CAAC,CAAA;yCAAgB,0BAAW;OAJ7C,YAAY,CAqBxB;IAAD,mBAAC;CAAA,AArBD,IAqBC;AArBY,oCAAY","sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {LabelConfig} from \"./label.config\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable()\nexport class LabelService {\n  public lang: BehaviorSubject<string>;\n  public urlPrefix: any\n\n  constructor(@Inject('config') public config: LabelConfig) {\n    this.lang = new BehaviorSubject<string>(this.languages[0])\n    this.urlPrefix = \"/labelmanager/app/\" + this.appName;\n  }\n\n  public get languages(): string[] {\n    return this.config.languages;\n  }\n\n  public get appName(): string {\n    return this.config.appName;\n  }\n\n  public changeLang(lang: string) {\n    this.lang.next(lang)\n  }\n\n}\n"]}